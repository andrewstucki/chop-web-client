image: quay.io/lifechurch/k8s-deploy-helper:6.0.0
variables:
  # Application deployment domain
  KUBE_DOMAIN: churchonline.us
  CYPRESS_CACHE_FOLDER: "$CI_PROJECT_DIR/cache/Cypress"

stages:
  - compile
  - test
  - build
  - review
  - cypress
  - report
  - canary
  - destroy-canary
  - production

cache:
  untracked: true
  key: ${CI_COMMIT_REF_SLUG}
  paths:
    - node_modules/
    - dist/
    - cache/Cypress

before_script:
  - yarn install --pure-lockfile

test:
  image: node:lts
  stage: test
  dependencies: []
  script:
    - yarn lint
    - yarn flow check
    - yarn test:coverage
  artifacts:
    expire_in: 1 day
    paths:
      - coverage/

compile:app-review:
  image: node:lts
  stage: compile
  dependencies: []
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.$KUBE_DOMAIN
  variables:
    CI_ENVIRONMENT_URL: https://$CI_ENVIRONMENT_SLUG.$KUBE_DOMAIN
  script:
    - yarn build --env.WEBPACK_MODE=$REVIEW_WEBPACK_MODE --env.ENV=$REVIEW_ENV --env.GATEWAY_HOST=$REVIEW_GATEWAY_HOST --env.GTM_GTMID=$REVIEW_GTM_GTMID --env.GTM_AUTH=$REVIEW_GTM_AUTH --env.GTM_PREVIEW=$REVIEW_GTM_PREVIEW --env.PUBLIC_PATH=$CI_ENVIRONMENT_URL
  artifacts:
    expire_in: 1 day
    paths:
      - dist/
  except:
    - master

compile:app-production:
  image: node:lts
  stage: compile
  dependencies: []
  script:
    - yarn build --env.WEBPACK_MODE=$PRODUCTION_WEBPACK_MODE --env.ENV=$PRODUCTION_ENV --env.BABEL_ENV=$PRODUCTION_ENV --env.GATEWAY_HOST=$PRODUCTION_GATEWAY_HOST --env.GTM_GTMID=$PRODUCTION_GTM_GTMID --env.GTM_AUTH=$PRODUCTION_GTM_AUTH --env.GTM_PREVIEW=$PRODUCTION_GTM_PREVIEW --env.PUBLIC_PATH=$PRODUCTION_PUBLIC_PATH
  artifacts:
    expire_in: 1 day
    paths:
      - dist/
  only:
    - master

build:image-review:
  stage: build
  cache:
    untracked: false
    policy: pull
  before_script: []
  script:
    - command build Dockerfile-app
  dependencies:
    - compile:app-review
  only:
    - branches
  except:
    - master

build:image-production:
  stage: build
  cache:
    untracked: false
    policy: pull
  before_script: []
  script:
    - command build Dockerfile-app
  dependencies:
    - compile:app-production
  only:
    - master

review:
  stage: review
  dependencies: []
  cache:
    untracked: false
    policy: pull
  variables:
    CI_ENVIRONMENT_URL: https://$CI_ENVIRONMENT_SLUG.$KUBE_DOMAIN
  before_script: []
  script:
    - command deploy
    - echo $CI_ENVIRONMENT_URL > environmentUrl.txt
  artifacts:
    expire_in: 1 hr
    paths:
      - environmentUrl.txt
  environment:
    name: review/$CI_COMMIT_REF_NAME
    url: https://$CI_ENVIRONMENT_SLUG.$KUBE_DOMAIN
    on_stop: stop_review
  only:
    - branches
  except:
    - master

cypress:review:
  image: cypress/base:10.15.3
  stage: cypress
  allow_failure: true
  script:
    - CI_ENVIRONMENT_URL=`cat environmentUrl.txt`
    - yarn cy:run --record --key $CYPRESS_RECORD_KEY --config baseUrl=$CI_ENVIRONMENT_URL
  artifacts:
    expire_in: 1 day
    paths:
      - cy-coverage/
  dependencies:
    - review
  except:
    - master

stop_review:
  stage: review
  dependencies: []
  variables:
    GIT_STRATEGY: none
  before_script: []
  script:
    - command destroy app=app-$CI_ENVIRONMENT_SLUG
  environment:
    name: review/$CI_COMMIT_REF_NAME
    action: stop
  when: manual
  only:
    - branches
  except:
    - master

code_coverage_report_master:
  image: cypress/base:10.15.3
  stage: report
  dependencies:
    - test
  allow_failure: true
  cache: {}
  variables:
    CC_TEST_REPORTER_ID: 95b2685f3a9425616a05a86a41c0bf0f893c8703a2d19395ac2ea5cdd55a1acd
  script:
    - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
    - chmod +x ./cc-test-reporter
    - ./cc-test-reporter before-build
    - yarn install
    - yarn test:coverage
    - yarn cy:run --record --key $CYPRESS_RECORD_KEY --config baseUrl=https://digerati.churchonline.org/host_mobile
    - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.cy.json cy-coverage/lcov.info
    - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.jest.json coverage/lcov.info
    - ./cc-test-reporter  sum-coverage coverage/codeclimate.*.json -p 2
    - ./cc-test-reporter upload-coverage
  only:
    - master

code_coverage_report:
  image: node:lts
  stage: report
  allow_failure: true
  dependencies:
    - test
    - cypress:review
  cache: {}
  variables:
    CC_TEST_REPORTER_ID: 95b2685f3a9425616a05a86a41c0bf0f893c8703a2d19395ac2ea5cdd55a1acd
  script:
    - curl -L https://codeclimate.com/downloads/test-reporter/test-reporter-latest-linux-amd64 > ./cc-test-reporter
    - chmod +x ./cc-test-reporter
    - ./cc-test-reporter before-build
    - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.cy.json cy-coverage/lcov.info
    - ./cc-test-reporter format-coverage -t lcov -o coverage/codeclimate.jest.json coverage/lcov.info
    - ./cc-test-reporter  sum-coverage coverage/codeclimate.*.json -p 2
    - ./cc-test-reporter upload-coverage
  except:
    - master

canary:
  stage: canary
  cache: {}
  dependencies: []
  before_script: []
  script:
    - command deploy
  environment:
    name: production
    url: https://$KUBE_DOMAIN
  when: manual
  allow_failure: true
  only:
    - master

destroy-canary:
  stage: destroy-canary
  cache: {}
  dependencies: []
  allow_failure: true
  environment:
    name: production
  when: manual
  before_script: []
  script:
    - command destroy-canary
  only:
    - master

production:
  stage: production
  dependencies: []
  cache: {}
  variables:
    CI_ENVIRONMENT_URL: http://$KUBE_DOMAIN
  before_script: []
  script:
    - command deploy
  environment:
    name: production
    url: https://$KUBE_DOMAIN
  when: manual
  allow_failure: false
  only:
    - master

lighthouse:review:
  image: markhobson/node-chrome
  stage: report
  dependencies:
    - review
  allow_failure: true
  variables:
    LIGHTHOUSE_TEST_URL: https://live.life.church/host_mobile
  before_script:
    # yarn doesn't exist in this image
    - npm i -g lighthouse
  script:
    - CI_ENVIRONMENT_URL=`cat environmentUrl.txt`
    - lighthouse $CI_ENVIRONMENT_URL --chrome-flags="--headless --no-sandbox" --output html --output-path ./report.html
  artifacts:
    paths:
      - ./report.html
    expire_in: 1 week
  except:
    - master

lighthouse:production:
  image: markhobson/node-chrome
  stage: report
  dependencies: []
  allow_failure: true
  before_script:
    # yarn doesn't exist in this image
    - npm i -g lighthouse
  script:
    - lighthouse https://live.life.church/host_mobile --chrome-flags="--headless --no-sandbox" --output html --output-path ./report.html
  artifacts:
    paths:
      - ./report.html
    expire_in: 1 week
  only:
    - master

storybook:review:
  image: node:lts
  stage: report
  dependencies: []
  script:
    - yarn build-storybook
    - yarn netlify deploy --dir=storybook-static -m ${CI_COMMIT_REF_SLUG}
  only:
    - branches
  except:
    - master

storybook:production:
  image: node:lts
  stage: report
  dependencies: []
  script:
    - yarn build-storybook
    - yarn netlify deploy --dir=storybook-static --prod -m ${CI_COMMIT_REF_SLUG}
  only:
    - master
